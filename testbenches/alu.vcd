$date
	Mon Jul 14 20:27:00 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! z_flag $end
$var wire 8 " res [7:0] $end
$var wire 1 # ovf $end
$var wire 1 $ c_out $end
$var reg 8 % a [7:0] $end
$var reg 8 & b [7:0] $end
$var reg 3 ' op [2:0] $end
$var reg 1 ( rst $end
$scope module utt $end
$var wire 8 ) a [7:0] $end
$var wire 8 * b [7:0] $end
$var wire 3 + op [2:0] $end
$var wire 1 ( rst $end
$var reg 1 $ c_out $end
$var reg 1 # ovf $end
$var reg 8 , res [7:0] $end
$var reg 9 - temp [8:0] $end
$var reg 1 ! zero $end
$upscope $end
$scope task check_result $end
$var reg 8 . expected [7:0] $end
$var reg 256 / msg [255:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx /
bx .
b0 -
b0 ,
b0 +
b0 *
b0 )
1(
b0 '
b0 &
b0 %
0$
0#
b0 "
0!
$end
#10000
b10001000 "
b10001000 ,
b10001000 -
b100000101001110010001000010000001110100011001010111001101110100 /
b10001000 .
b10101010 &
b10101010 *
b11001100 %
b11001100 )
0(
#15000
b11101110 "
b11101110 ,
b11101110 -
b1001111010100100010000001110100011001010111001101110100 /
b11101110 .
b1 '
b1 +
#20000
b1100110 "
b1100110 ,
b1100110 -
b101100001001111010100100010000001110100011001010111001101110100 /
b1100110 .
b10 '
b10 +
#25000
b11110000 "
b11110000 ,
b11110000 -
b100111001001111010101000010000001110100011001010111001101110100 /
b11110000 .
b11 '
b11 +
b0 &
b0 *
b1111 %
b1111 )
#30000
b1000110 "
b1000110 ,
b1000110 -
b10000010100010001000100001000000110111001101111001000000110001101100001011100100111001001111001 /
b1000110 .
b100 '
b100 +
b10100 &
b10100 *
b110010 %
b110010 )
#35000
1$
b101100 "
b101100 ,
b100101100 -
b10000010100010001000100001000000110111101110110011001010111001001100110011011000110111101110111 /
b101100 .
b1100100 &
b1100100 *
b11001000 %
b11001000 )
#40000
0$
b111100 "
b111100 ,
b111100 -
b101001101010101010000100010000001110100011001010111001101110100 /
b111100 .
b101 '
b101 +
b101000 &
b101000 *
b1100100 %
b1100100 )
#45000
b1100100 "
b1100100 ,
b1100100 -
b100100101001110010000110010000001110100011001010111001101110100 /
b1100100 .
b110 '
b110 +
b0 &
b0 *
b1100011 %
b1100011 )
#50000
b100 "
b100 ,
b100 -
b100010001000101010000110010000001110100011001010111001101110100 /
b100 .
b111 '
b111 +
b101 %
b101 )
#55000
